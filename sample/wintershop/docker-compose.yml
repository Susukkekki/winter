version: '3.3'

services:
# proxy
  proxy:
    image: envoyproxy/envoy:dev-9a5c4bb3521b68618325d04a304b7be3855e8b14
    entrypoint: /bin/sh
    command: -c "envoy -c /etc/envoy/envoy.yaml --config-yaml \"$$(cat /etc/envoy/envoy-override.yaml)\""
    ports:
      - "9901:9901"
      - "10000:10000"
      - "5678:5678"
      - "80:80"
    volumes:
       - ./proxy/envoy-override.yaml:/etc/envoy/envoy-override.yaml
    networks:
      default:
        aliases:
          - wintershop.io
# odic and saml
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: start-dev --import-realm --http-relative-path=/auth
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak?useSSL=false
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/wintershop-realm.json:/opt/keycloak/data/import/wintershop-realm.json
    depends_on:
      - keycloak-postgres
  keycloak-saml:
    image: quay.io/keycloak/keycloak:24.0
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    volumes:
      - ./keycloak/saml-sso-realm.json:/opt/keycloak/data/import/saml-sso-realm.json
# database
  keycloak-postgres:
    container_name: keycloak-postgres
    image: postgres:15.5-alpine3.19
    volumes:
        - ./.pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
# apis
  product-api:
    build:
      context: ./service/product-api
    ports:
      - "8001:8001"
    environment:
      - ISSUER_URI=http://wintershop.io/auth/realms/wintershop
  cart-api:
    build:
      context: ./service/cart-api
    ports:
      - "8002:8002"
    environment:
      - ISSUER_URI=http://wintershop.io/auth/realms/wintershop
# webapps
  shop-webapp:
    build:
      context: ./webapp/shop-webapp
    ports:
      - "3000:80"
  cart-webapp:
    build:
      context: ./webapp/cart-webapp
    ports:
      - "3001:80"
